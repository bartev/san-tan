emacs notes
F10	or M-`	Menu bar

C-h k		Help with key bindings?

Meta key
Either use Alt (option) or Esc. If use  Esc, press and release, then type next character.

Complete key / Prefix key
Default Prefix keys
C-c
C-h (alias for F1)	Help
C-x
C-x RET
C-x @
C-x a
C-x n
C-x r
C-x v
C-x 4
C-x 5
C-x 6 (alias for F2)
Esc
M-g
M-o

Type the help character (C-h or F1) after prefix key to display list of commands

Bindings between keys and commands are recorded in keymaps tables

Customization
M-x customize

C-q quoted-insert

Move Point
M-r	Center point on screen without moving text
M-3-r	Move point to beginning of line 3 without moving text
M-<	Move to beginning of buffer
M-n-<	Move to n/10 of the way from beginning of buffer

M-g g	Move to line n
C-d 	deletes character after the point
C-k 	Kill forward to the end of the line
M-d 	Kill foward to the end of the next word

C-x =	Show location of point in minibuffer

Undoing changes
C-x u
C-_	(C-/ doesn't seem to work)

this is a bu of words



C-o  	Insert a blank line (open-line)
C-x C-o	Delete all but one of many consecutive blank lines


*** Cool feature! ***
M-x hl-line-mode   Enable/Disable hightlighting of current line.

*** Repeating commands
M-5 C-n		   Repeat C-n 5 times
M-- 5 C-n	   Do C-n in opposite direction 5 times
      		   (can use negative arguments)
M-5 0 C-n	   Move down 50 lines (only hold M- down for first number)
C-u 5 C-n	   Move down 5 lines. Can use C-u 5 instead of M-5
C-u   		   (universal-argument)
C-u		   'Four times' - Multiplies argument of next command by 4
C-u C-u		   Multiplies by 16 - can be tackec on to one another.

C-x z		   Repeat previous command (can type z multiple times)


Minibuffer
C-g		Exit minibuffer
*** HANDY ***
M-DEL		Delete directory names backwards

Completion
Inside minibuffer, TAB, SPC and ? perform completion
e.g. M-x em-l-m TAB	   Completes to 'emacs-lisp-mode'

C-q    		   (quoted-insert) Use in minibuffer to insert special char
C-q TAB		   Inserts TAB in minibuffer

M-v 		   While in the minbuffer, selects window showing completion list buffer (switch-to-completions)

M-p / M-n	   (previous-history-element) Moves through minibuffe history list

M-x list-command-history
		Display entire command history
C-x ESC ESC	re-execute command used in the minibuffer.

M-x 		Run a command by name.

C-h		Help
C-h b		Display all key bindings
C-h key		Given a key sequence, show the name of the command.

C-h m		Display documentation of the current major mode
C-h F		(Info-goto-emacs-command-node) Find a command's documentation in a manual.


Setting the mark
C-SPC/C-@   Set the mark
C-x C-x	    Set mark at the point, exchange mark & point

Operating on the Region
C-w	  Kill region
M-w	  Copy region
C-x C-l	  Lower case
C-x C-u	  Upper case
C-u C-/	  Undo changes within region
C-x TAB	  Indent
C-M-\	  Indent

Deletion
M-\	Delete spaces and tabs around point
M-SPC	Delete spaces and tabs around point (leaves 1 point)
C-x C-o	Delete blank lines around curent line
M-^ 	Join 2 lines
C-k	Kill line (from point to end)
C-w	Kill region

M-d	Kill word
M-DEL	Kill word backwards

C-x DEL	Kill back to beginning of sentence
M-k 	Kill to end of sentence.

M-z char     Kill through next occurance of char (zap-to-char)

M-w 	     Kill ring save (copies regin to kill-ring w/o killing it)

Yanking
C-y	Yank last killed text
M-y	Replace last yanked text with earlier batch of text
C-M-w	Append next kill to last kill

Registers
C-x r SPC n	Record position of point and current buffer in register n
C-x r j n 	Jump to position of register n
C-x r s n	Copy region into register n (copy-to-register)
C-x r i n	Insert text from register n (insert-register)
C-u C-x r s n	Moves region into register (like copy, but removes from current buffer)

Bookmarks
C-x r m RET	Set bookmark for visited file at point.
C-x r m bkmk RET    Set bookmark named bkmk at point.
C-x r b bkmk RET    Jump to bookmark named bkmk
C-x r l	     	    List all bookmarks
M-x bookmark-save   Save all current bookmark values in the default bookmark file

Scrolling
C-l	Current line is center-most text line. (2nd time top, 3rd time bottom)
C-v	scroll-up (Scroll forward by nearly a full window)
M-v	scroll-down (Scroll backwards)
C-M-l	reposition-window (Scroll heuristically to bring useful into onto screen)

M-x follow-mode		  Causes 2 windows to act like a large virtual window


Faces (fonts)
M-o	Choose face menu (or M-x facemenu-...)

Interactive Highlighting
M-x highlight-changes-mode   minor mode, highlights changed parts of buffer

Incremental Search
M-%   (query-replace) In incremental search to replace
C-M-% regexp search and replace (query-replace-regexp)
      y (SPC)    replace occurence with new string
      n (DEL)    skip to next occurence without replacing this one
      , (comma)	 replace this occurence and display the result
      q (RET)    exit without doing more replacements
      . (period) replace this occurence and exit
      !		 replace all remaining occurences without asking again
M-x replace-string
C-w, C-y grab text from buffer into the searh string

C-M-s	 Incremental regexp search
Incremental search is case insensitive unless you include a capital letter
M-c	    toggle case sensitivity of that search
M-x how many	   Prompt for regexp and print # of matches



Fixing typos
C-x u, C-_	Undo (C-/ also, but it doesn't seem to work)


Case conversion
M-l	Convert to lower case
M-u	Convert to upper case
M-c	Convert to capital case
M-- M-l	convert last work to lower case
M-- M-c	Convert last work to lower case with capital initial


Checking spelling
M-$	 Needs Aspell, Ispell or Hunspell
	 MUST INSTALL SPELLING DICTIONARY

Keyboard macros
F3	 Start defining macro
F4	 End defining macro

File handling
M-x pwd	display default directory
M-x eshell	open shell in a buffer
C-x C-f		Visit a file (find-file)
C-x C-r		Visit a file for reading only
C-x C-v		Like C-x C-f, but kills current buffer (offers to save)
C-x 4 f		Visit a file in another window
C-x 5 f		Visit a file in another frame

Saving files
C-x C-s		Save current buffer
C-x s		Save any or all buffers
M-~ 		Forget that the crrent buffer has been changed
C-x C-w		Save current bufer with specified file name

M-x revert-buffer    Get rid of changes to file
M-x recover=file RET foo.c RET	To recover a file using auto-save version

File Directories
C-x C-d directory_name RET	Display brief directory listing
C-u C-x C-d directory_name RET	Display verbose directory listing

Buffers
C-x buffer REG	Select/create buffer named buffer
C-x LEFT/RIGHT		      Select previous/next buffer

BUFFER LIST MENU CHOICES *** GOOD STUFF HERE
C-x C-b         List existing buffers
    d		request to delete buffer, then move down
    C-d		request to delete buffer, then move up
    s		request to save
    x		PERFORM DELETION/SAVE REQUESTS
    u		remove any request for current line and move down
    ~		Mark buffer unmodified
    %		Toggle read-only flag
    t		visit buffer as a tags table (?)
    q		quit buffer menu
    f (RET)	select this line's buffer in place of *Buffer List*
    o 		Select this line's buffer in another window
    C-o		Select this line's buffer in another window (don't select)
    1		Select this buffer in full-screen window
    2		Set up 2 windows with this buffer & previous buffer
    b		bury buffer listed
    m		Mark this lines buffer to be displayed in another window (when use v command)
    v		Select this line's buffer, & open 'm' lines in other windows
    T		Delete/insert lines for non-file buffers

C-u C-x C-b	List buffers that are visiting files
C-x C-q		Toggle read-only status
M-x rename-buffer

Killing buffers
C-x k bname RET	Kill buffer bname
M-x kill-some-buffers
M-x kill-matching-buffers
M-x clean-buffer-list	Kills unmodified buffers that haven't been used in a while
M-x buffer-menu		begin editing a buffer listing all emacs buffers


Splitting windows
C-x 2	  Vertical split (one on top of another)
C-x 3	  Horizontal split (side-by-side)

Using other windows
C-x o 	  Select other-window
C-M-v	  Scroll next window (scroll-other-window)
M-x compare-windows   Find the next place where the text doesn't match

Displaying in another window
C-x 4 b bname RER     Select/create bname in another window
C-x 4 C-o bname RET   Display (don't select) bname in another window

C-x 4 fname	      Visit fname in another window (and select)
C-x d directoryname   Select a Dired buffer in another window

Deleting/Rearranging windows
C-x 0      Delete selected window
C-x 1	   Delete all except current window
C-x 4 0	   Delete selected window and kil buffer that was showing.
C-x ^ 	   Make selected window taller
C-x -	   Shrink this window (doesn't work?)
C-x }	   Make wider
C-x {	   Make narrower
C-x +	   Make windows same height

Frames
C-x 5 2	   Create new frame and switch to it
C-x 5 o	   Cycle through frames
C-x 5 0	   Delete current frame
C-x 5 1	   Delete other frames (?)

Major Modes
Fundamental	No mode-specific redefinitions
TAB, DEL, C-j	Most often changed
C-c  	  	Prefix key, normally contains mode-specific commands

Most programming language major jkodes specify BLANK LINES to separate paragraphs. Also use Auto Fill mode to use the definition of TAB to indent new lines that it creates.

To explicitly set major mode:
M-x majorModeName-mode	(you supply majorModeName)
